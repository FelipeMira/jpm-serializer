plugins {
    id 'java'
    id 'java-library'
    id "idea"
    id 'maven-publish'
}

group = 'br.com.felipemira'
version = '1.0'

repositories {
    mavenCentral()
    mavenLocal()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    implementation group: 'org.apache.avro', name: 'avro', version: '1.11.3'
    implementation group: 'org.apache.commons', name: 'commons-io', version: '1.3.2' // Para leitura de arquivos
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.9.0' // Para leitura de arquivos
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    implementation group: 'net.minidev', name: 'json-smart', version: '2.5.0'

    testImplementation platform( group: 'org.junit', name: 'junit-bom', version: '5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperty 'file.encoding', 'UTF-8'
}

task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    archiveClassifier.set('javadoc')
}
task packageSources(type: Jar, dependsOn: 'classes') {
    from sourceSets.main.allSource
    archiveClassifier.set('sources')
}

build.dependsOn publishToMavenLocal

check.dependsOn test

test {
    useJUnitPlatform()
}